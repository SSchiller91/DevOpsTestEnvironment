# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- "*"

stages:
  - stage: test
    jobs:
      - job: 'validateandtest'
        pool:
          vmimage: windows - latest
        steps:
          - task: AzureResourceManagerTemplateDeployment@3
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: 'RoehmDevOpsConnection'
              subscriptionId: '6c7406cd-24df-44b1-86a9-fce7ffa659c6'
              action: 'Create Or Update Resource Group'
              resourceGroupName: 'RoehmDevOps'
              location: 'North Europe'
              templateLocation: 'Linked artifact'
              deploymentMode: 'Incremental'
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: 'Install-Module Az.Resources -RequiredVersion 1.12.1-preview -AllowPrerelease -Force -Scope CurrentUser'
          - task: AzurePowerShell@5
            inputs:
              azureSubscription: 'RoehmDevOpsConnection'
              ScriptType: 'InlineScript'
              Inline: |
                $Parameters = @{
                  ResourcegroupName     = "RoehmDevOps"
                  Templatefile          = ".\StorageAccount\azuredeploy.json"
                  TemplateParameterfile = ".\StorageAccount\azuredeploy.parameters.json"
                  Mode                  = 'Incremental'
                 }
                $Result = Get-AzResourceGroupDeploymentWhatIfResult @Parameters
                $Result
              azurePowerShellVersion: 'LatestVersion'